function h = header(fid, option)%HEADER Helper function to write or read header from fid.[fn, per, format] = fopen(fid);if isempty(fn)    h = 'Called on invalid fid';    warning(h)    returnendswitch lower(option)    case 'write'        h = 0;        if 'w' ~= per(1)            h = '''write'' called on non-writable fid';            warning(h);            return        end        switch format            case 'ieee-le'                format = 1;            case 'ieee-be'                format = 2;            otherwise                warning('unknown format option');                format = 0;        end                fwrite(fid, default('headerstring'), 'char');                A(1) = format;        A(2) = default('size');        count = fwrite(fid, A, 'int8');        if (2 ~= (count))            error('what?')        end        count = fwrite(fid, default('MAGIC'), 'uint32');        if (1 ~= (count))            error('what?')        end        count = fwrite(fid, default('version'), 'int16');        if (1 ~= (count))            error('what?')        end    case 'read'        h = 0; % assume it's valid until proven otherwise        [ahead, count] =...            fread(fid, default('headerlength'), 'char');        if (count ~= default('headerlength'))            warning('Could not read in full header');            h = 1;            return;        end        Aformat = fread(fid, 1, 'int8');        if (Aformat ~= 1 && Aformat ~= 2)            warning('Unrecognized format code');            h = 1;            return;        end                Asize = fread(fid,1,'int8');        if (Asize ~= 1)            warning('Unrecognized size code');            h = 1;            return;        end        curloc = ftell(fid);        Amagic = fread(fid, 1, 'uint32');        while (Amagic ~= default('magic') )            [afn, aper, aformat] = fopen(fid); % remember we did this at the beginning            fclose(fid);            nextformat = altformat(aformat, format);            if nextformat == -1                warning ('Could not find magic')                h = 1;                return;            end            fid = fopen(afn, aper, nextformat);            fseek(fid, curloc, 'bof');            Amagic = fread(fid, 1, 'uint32');        end        Aversion = fread(fid, 1, 'int16');        if (Aversion ~= 1)            warning('Unrecognized version code found');            h = 1;            return;        end    otherwise        error('what?')endfunction h = altformat (this, first)switch lower(this)    case 'ieee-be'        h = 'ieee-le';             case 'ieee-le'        h = 'ieee-be';     otherwise        warning('Unknown format encountered');        h = -1;endif h == first    warning('Tried all known formats')    h = -1;endreturn